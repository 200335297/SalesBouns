<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        JAj+D12Bd0G870vUAAAAAElFTkSuQmCC
</value>
  </data>
</root>